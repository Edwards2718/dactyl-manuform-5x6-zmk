#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC    &kp N1   &kp N2   &kp N3      &kp N4     &kp N5   &kp N6         &kp N7   &kp N8       &kp N9        &kp N0     &kp MINUS  &kp EQUAL &kp BSPC
                &kp TAB    &kp Q    &kp W    &kp E       &kp R      &kp T    &kp LBKT       &kp RBKT &kp Y        &kp U         &kp I      &kp O      &kp P     &kp BSLH
                &kp CAPS   &kp A    &kp S    &kp D       &kp F      &kp G    &kp GRAVE      &none    &kp H        &kp J         &kp K      &kp L      &kp SEMI  &kp ENTER
                &kp LSHIFT &kp Z    &kp X    &kp C       &kp V      &kp B                            &kp N        &kp M         &kp COMMA  &kp DOT    &kp FSLH  &kp RSHIFT
                &kp LCTRL  &kp LWIN &kp LALT &lt RSE SQT &kp LSHIFT &kp BACKSPACE                    &kp ENTER    &kp SPACE     &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT
                                    &kp DEL  &kp END  &mo LWR   &kp HOME                             &kp C_VOL_UP &kp C_VOL_DN  &kp C_MUTE &kp PSCRN
                                                                                                                                                    
            >;
        };

        lower_layer {
            bindings = <
                &trans     &kp F1   &kp F2          &kp F3       &kp F4      &kp F5   &kp F6         &kp F7   &kp F8     &kp F9       &kp F10   &kp F11    &kp F12   &trans
                &trans     &trans   &bt BT_SEL 0    &out OUT_BLE &sys_reset  &trans   &trans         &trans   &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &bt BT_SEL 1    &out OUT_USB &bootloader &trans   &trans         &trans   &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &bt BT_SEL 2    &bt BT_CLR   &trans      &trans                           &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &bt BT_SEL 3    &trans       &trans      &trans                           &trans     &trans       &trans    &trans     &trans    &trans
                                    &kp C_SLEEP     &trans       &trans      &tog LWR                         &trans     &trans       &trans    &trans
                                             
                                             
                                             
            >;
        };

        raise_layer {
            bindings = <
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &kp GRAVE  &kp LBKT   &kp RBKT  &kp MINUS  &kp EQUAL       &kp BSPC
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &kp SEMI   &kp N7     &kp N8    &kp N9     &kp KP_DIVIDE   &trans
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &kp SQT    &kp N4     &kp N5    &kp N6     &kp KP_MULTIPLY &kp ENTER
                &trans     &trans   &trans   &trans      &trans     &trans                           &kp COMMA  &kp N1     &kp N2    &kp N3     &kp KP_MINUS    &trans
                &trans     &trans   &trans   &trans      &kp LSHIFT &kp BACKSPACE                    &kp ENTER  &kp SPACE  &kp N0    &kp DOT    &kp KP_PLUS     &trans
                                    &trans   &trans      &trans     &trans                           &trans     &kp C_VOL_UP &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &trans   &trans      &trans     &trans   &trans         &trans   &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &trans   &trans      &trans     &trans                           &trans     &trans       &trans    &trans     &trans    &trans
                &trans     &trans   &trans   &trans      &trans     &trans                           &trans     &trans       &trans    &trans     &trans    &trans
                                    &trans   &trans      &trans     &trans                           &trans     &trans       &trans    &trans
            >;
        };
    };
};
